- name: Download prometheus
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{prometheus_version}}/prometheus-{{prometheus_version}}.linux-amd64.tar.gz
    dest: /opt
    remote_src: true

- name: copy prometheus service file
  ansible.builtin.template:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service

- name: copy prometheus server configuration
  ansible.builtin.template:
    src: prometheus.yml
    dest: /opt/prometheus-{{prometheus_version}}.linux-amd64/prometheus.yml

- name: copy prometheus Alerts configuration
  ansible.builtin.template:
    src: alerts.yml
    dest: /opt/prometheus-{{prometheus_version}}.linux-amd64/alerts.yml

- name: start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Wait for prometheus port
  ansible.builtin.shell: sleep 5 ; netstat -lntp | grep 9090

- name: Copy Grafana repo
  ansible.builtin.template:
    src: grafana.repo
    dest: /etc/yum.repos.d/grafana.repo

- name: Install Grafana
  ansible.builtin.dnf:
    name: grafana-enterprise
    state: installed

#  ansible.builtin.wait_for:
#    port: 9090
#    host: 0.0.0.0
#    delay: 10
#    timeout: 5
- name: check Grafana service
  ansible.builtin.systemd_service:
    name: grafana-server
    state: restarted
  register: out
  ignore_errors: true

- name: msg
  debug:
    msg: "{{out}}"   # to print what output is coming and debug

- name: install Grafana
  ansible.builtin.dnf:
    name: https://dl.grafana.com/enterprise/release/grafana-enterprise-10.3.1-1.x86_64.rpm
    state: installed
  when: out.status.ActiveState != "active"  # trying to skip grafana reinstall everytime of running this


- name: start Grafana service
  ansible.builtin.systemd_service:
    name: grafana-server
    state: restarted
    enabled: yes  # we dont give daemon reload here because rpm file is taking care of that
  when: out.status.ActiveState != "active"

- name: copy file
  ansible.builtin.copy:
    src: grafana-expense.json
    dest: /tmp/grafana-expense.json

- name: Import Grafana dashboard
  community.grafana.grafana_dashboard:
   grafana_url: http://172.31.42.138:3000
   grafana_api_key: "{{lookup('amazon.aws.aws_ssm', 'grafana.apikey', region='us-east-1') }}"
   state: present
   commit_message: Updated by ansible
   overwrite: true
   path:  /tmp/grafana-expense.json

- name: Download Alert Manager
  ansible.builtin.unarchive:
    src: https://github.com/prometheus/alertmanager/releases/download/v{{alertmanager_version}}/alertmanager-{{alertmanager_version}}.linux-amd64.tar.gz
    dest: /opt
    remote_src: true

- name: copy AlertManager service file
  ansible.builtin.template:
    src: alertmanager.service
    dest: /etc/systemd/system/alertmanager.service

- name: copy AlertManager  configuration
  ansible.builtin.template:
    src: alertmanager.yml
    dest: /opt/alertmanager-{{alertmanager_version}}.linux-amd64/alertmanager.yml

- name: start Alert Manager service
  ansible.builtin.systemd:
    name: alertmanager
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Wait for prometheus port
  ansible.builtin.shell: sleep 5 ; netstat -lntp | grep 9093
